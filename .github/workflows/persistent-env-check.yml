name: Persistent Environment Check
on:
  pull_request:

env:
  SERVICE: "tyk"
  CONTAINER_NAME: "tyk"
  CLUSTER: "kikitest"
  REGISTRY: "754489498669.dkr.ecr.eu-central-1.amazonaws.com"
  IMAGE: "tyk:v4.0.0"
  ENV_EXIST: 'true'

jobs:
  Check:
    runs-on: ubuntu-latest
    outputs: 
      env-exist: ${{ steps.set-output-defaults.outputs.env-exist }}
      container-name: ${{ steps.set-output-defaults.outputs.container-name }}
      cluster: ${{ steps.set-output-defaults.outputs.cluster }}
      service: ${{ steps.set-output-defaults.outputs.service }}
      image: ${{ steps.set-output-defaults.outputs.image }}
      registry: ${{ steps.set-output-defaults.outputs.registry }}
    steps:
      - name: Simulate outputs from the release pipeline
        id: set-output-defaults
        run: |
          echo "::set-output name=env-exist::${{ env.ENV_EXIST }}"
          echo "::set-output name=container-name::${{ env.CONTAINER_NAME }}"
          echo "::set-output name=cluster::${{ env.CLUSTER }}"
          echo "::set-output name=service::${{ env.SERVICE }}"
          echo "::set-output name=image::${{ env.IMAGE }}"
          echo "::set-output name=registry::${{ env.REGISTRY }}"


  Create-workflow:
    if: ${{ needs.Check.outputs.env-exist == 'false' }}
    uses: ./.github/workflows/create-persistent-env.yml
    needs:
      - Check
    with:
      containerName: ${{ needs.Check.outputs.container-name }}
      cluster: ${{ needs.Check.outputs.cluster }}
      service: ${{ needs.Check.outputs.service }}
    secrets:
      aws_key: ${{ secrets.GROMIT_AWS_ACCESS_KEY_ID }}
      aws_secret: ${{ secrets.GROMIT_AWS_SECRET_ACCESS_KEY }}

  Update-workflow:
    if: ${{ needs.Check.outputs.env-exist == 'true' }}
    uses: ./.github/workflows/update-persistent-env.yml
    needs:
      - Check
    with:
      containerName: ${{ needs.Check.outputs.container-name }}
      cluster: ${{ needs.Check.outputs.cluster }}
      service: ${{ needs.Check.outputs.service }}
      image: ${{ needs.Check.outputs.image }}
      registry: ${{ needs.Check.outputs.registry }}
    secrets:
      aws_key: ${{ secrets.GROMIT_AWS_ACCESS_KEY_ID }}
      aws_secret: ${{ secrets.GROMIT_AWS_SECRET_ACCESS_KEY }}