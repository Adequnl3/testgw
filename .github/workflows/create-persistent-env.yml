name: Persistent Environment Creation
on:
  workflow_call:
    inputs:
      containerName:
        required: true
        type: string
      cluster:
        required: true
        type: string
      terraformDir:
        required: false
        type: string
        default: "./ci/terraform/environment"
    secrets:
      aws_key:
        required: true
      aws_secret:
        required: true

env:
  TERRAFORM_DIR: ${{ inputs.terraformDir }}
  CONTAINER_NAME: ${{ inputs.containerName }}
  CLUSTER: ${{ inputs.cluster }}

jobs:
  Create:
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false
      
      - name: Terraform Format
        working-directory: ${{ env.TERRAFORM_DIR }}
        id: fmt
        run: terraform fmt -check

      - name: Configure AWS credentials for use
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_key }}
          aws-secret-access-key: ${{ secrets.aws_secret }}
          aws-region: "eu-central-1"

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        id: init
        run: terraform init

      - name: Terraform Workspace
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform workspace new ${CLUSTER}
          terraform workspace show

      - name: Lock environment
        run:
          echo "CALL - Add entry on DinamoDB"

      - name: Generate Templates on EFS
        run:
          echo "CALL - Generate templates on EFS"

      - name: Make Input Var Files
        run:
          echo "CALL - Make input var files"

      - name: Terraform Apply
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve -var-file=master.tfvars

      - name: Unlock environment
        run:
          echo "CALL - Update entry on DinamoDB"